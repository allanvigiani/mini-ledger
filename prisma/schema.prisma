generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id           String   @id @default(uuid())
  name         String   @db.VarChar(255)
  email        String   @unique @db.VarChar(255)
  document     String   @unique @db.VarChar(255)
  credit_limit Float    @default(1000)
  balance      Float    @default(0)
  created_at   DateTime @default(now()) @db.Timestamp(0)

  movements Movement[]
  logs      LedgerLog[]

  @@map("accounts")
}

model Movement {
  id          Int          @id @default(autoincrement())
  account_id  String       @db.VarChar(255)
  amount      Float
  type        MovementType
  description String?
  created_at  DateTime     @default(now()) @db.Timestamp(0)

  account    Account    @relation(fields: [account_id], references: [id], onDelete: Cascade)
  ledger_log LedgerLog?

  @@index([account_id])
  @@map("movements")
}

model LedgerLog {
  id           Int          @id @default(autoincrement())
  movement_id  Int          @unique
  status       LedgerStatus
  fail_reason  String?
  processed_at DateTime     @default(now()) @db.Timestamp(0)

  movement  Movement @relation(fields: [movement_id], references: [id], onDelete: Cascade)
  Account   Account? @relation(fields: [accountId], references: [id])
  accountId String?

  @@index([movement_id])
  @@index([status])
  @@map("ledger_log")
}

enum MovementType {
  CREDIT
  DEBIT
}

enum LedgerStatus {
  PROCESSED
  FAILED
  PENDING
}
